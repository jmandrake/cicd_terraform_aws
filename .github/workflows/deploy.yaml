name: "terraform-deploy"

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'  # Trigger deployment only when changes occur in the 'api' directory
  pull_request:
    branches:
      - main

jobs:
  PushToAWS:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      jwtSecret: ${{ secrets.JWT_SECRET }} #github secret

    steps:
      - uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x' # Ensure Python 3.x is installed

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt  # If you have dependencies
          # Modify this to install any Python dependencies you have

      - name: Package Lambda Code
        run: |
          cd api
          mkdir -p ../zip  # Ensure the zip directory exists
          zip -r ../zip/api.zip .
        # Ensure your Python Lambda code resides in the 'api' directory

      - name: Push Zip to S3
        uses: jakejarvis/s3-sync-action@v0.3.1
        env:
          SOURCE_DIR: "./zip"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: |
          terraform fmt
          terraform init -upgrade

      - name: Selective Terraform Apply for Lambda
        if: github.event_name == 'push' && contains(github.event.head_commit.modified, 'api/')
        run: |
          terraform apply -auto-approve
        env:
          TF_VAR_aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_jwtSecret: ${{ secrets.JWT_SECRET }}
